"use client";

import { useEffect, useRef, useState } from "react";
import {
  Eye,
  Globe,
  Mic,
  MicVocal,
  SwitchCamera,
  Link,
  UserRoundPlus,
  Users,
  MessageCircle,
} from "lucide-react";

export default function FakeLive() {
  const videoRef = useRef<HTMLVideoElement>(null);
  const [viewers, setViewers] = useState(0);
  const [comments, setComments] = useState<
    Array<{ id: number; name: string; message: string; avatar: string }>
  >([]);

  useEffect(() => {
    const startCamera = async () => {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({
          video: true,
          audio: false,
        });
        if (videoRef.current) {
          videoRef.current.srcObject = stream;
        }
      } catch (err) {
        console.error("‡πÄ‡∏õ‡∏¥‡∏î‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ", err);
      }
    };

    const fakeComments = [
      "‡∫°‡∫µ‡∫´‡∫º‡∫≤‡∫ç‡∫™‡∫µ‡∫ö‡ªç?",
      "FC ‚ù§Ô∏è",
      "‡∫•‡∫≤‡∫Ñ‡∫≤‡ªÄ‡∫ó‡∫ª‡ªà‡∫≤‡ªÉ‡∫î",
      "3‡∫≠‡∫±‡∫ô 5‡∫û‡∫±‡∫ô‡ªÑ‡∫î‡ªâ‡∫ö‡ªç",
      "‡∫™‡∫ª‡ªà‡∫á‡ªÉ‡∫´‡ªâ‡∫°‡∫∑‡ªâ‡ªÉ‡∫î?",
      "‡∫ï‡∫¥‡∫î‡∫ï‡ªç‡ªà‡ªÅ‡∫ô‡∫ß‡ªÉ‡∫î",
      "‡∫ö‡ªç‡ªà‡ªÅ‡∫ä‡∫ö‡∫™‡∫ª‡ªà‡∫á‡∫Ñ‡∫∑‡∫ô‡ªÄ‡∫î‡∫µ",
      "‡∫™‡∫∞‡∫ö‡∫≤‡∫ç‡∫î‡∫µ",
      "‡∫°‡∫µ‡ªÄ‡∫Æ‡∫∑‡∫≠‡∫î‡∫≥‡∫ô‡ªâ‡∫≥‡∫Ç‡∫≤‡∫ç‡∫ö‡ªç?",
      "‡∫°‡∫µ‡∫ç‡∫ª‡∫ô‡∫Ç‡∫≤‡∫ç‡∫ö‡ªç",
      "‡∫û‡ªç‡ªà‡∫Ñ‡ªâ‡∫≤‡∫≠‡∫≤‡∫ç‡∫∏‡∫ó‡ªç‡ªà‡ªÉ‡∫î",
      "‡∫°‡∫µ‡ªÅ‡∫ö‡∫ö‡ªÉ‡∫î‡ªÅ‡∫î‡ªà",
      "‡∫™‡∫ª‡∫ô‡ªÉ‡∫à 3‡∫≠‡∫±‡∫ô",
      "‡∫™‡∫ª‡∫ô‡ªÉ‡∫à",
      "‡ªÅ‡∫ß‡∫±‡∫Å‡ªÉ‡∫™‡ªà‡∫ú‡∫ª‡∫°‡∫•‡∫≤‡∫Ñ‡∫≤‡∫ó‡ªç‡ªà‡ªÉ‡∫î",
      "‡∫™‡∫ª‡∫ô‡ªÉ‡∫à‡ªÅ‡∫ß‡∫±‡∫Å‡ªÉ‡∫™‡ªà‡∫ú‡∫ª‡∫°",
      "‡ªÅ‡∫ß‡∫±‡∫Å‡ªÉ‡∫™‡ªà‡∫ú‡∫ª‡∫°‡∫°‡∫µ‡∫™‡∫µ‡∫´‡∫ç‡∫±‡∫á‡ªÅ‡∫î‡ªà",
      "‡∫û‡ªç‡ªà‡∫Ñ‡ªâ‡∫≤‡∫´‡∫º‡∫≤‡∫ç‡ªÉ‡∫à‡ªÄ‡∫î‡∫µ",
      "‡∫Ç‡∫≤‡∫ç‡ªÅ‡∫ó‡ªâ‡∫ö‡ªç",
      "‡∫Ç‡∫≤‡∫ç‡ªÅ‡∫ó‡ªâ ‡∫´‡∫º‡∫∑ ‡∫Ñ‡∫≠‡∫ô‡ªÄ‡∫ó‡∫±‡ªâ‡∫ô",
      "‡∫û‡ªç‡ªà‡∫Ñ‡ªâ‡∫≤‡∫¢‡∫π‡ªà‡ªÅ‡∫Ç‡∫ß‡∫á‡ªÉ‡∫î",
      "ü§£",
      "üòÜ",
      "üòã",
      "ü§î",
    ];

    const fakeUsers = [
      {
        name: "Khamlar Souvannavong",
        avatar:
          "/img/lar.jpg",
      },
      {
        name: "Thanousin Vongsahalart",
        avatar:
          "/img/sin.jpg",
      },
      {
        name: "K'Soukkunya Vong Pha Chanh",
        avatar:
          "/img/ya.jpg",
      },
      {
        name: "Vilaseth Vongsavath",
        avatar:
          "/img/do.jpg",
      },
      {
        name: "Ko Phanouvath",
        avatar:
          "/img/ko.jpg",
      },
      {
        name: "Saeng Pha Chanh KH",
        avatar:
          "/img/kop.jpg",
      },
      {
        name: "khamsavanh Vongsavath",
        avatar:
          "/img/n1.jpg",
      },
      {
        name: "Phoume linthong",
        avatar:
          "/img/n2.jpg",
      },
      {
        name: "Phoumy vilayvong",
        avatar:
          "/img/n3.jpg",
      },
      {
        name: "Khampheng Phommasack",
        avatar:
          "/img/n4.jpg",
      },
    ];

    const avatars = [
      "https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&crop=face",
      "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face",
      "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=100&h=100&fit=crop&crop=face",
      "https://images.unsplash.com/photo-1527980965255-d3b416303d12?w=100&h=100&fit=crop&crop=face",
      "https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face",
    ];

    let commentId = 0;
    let viewerTimer: any;
    let commentTimer: any;

    const randomViewerUpdate = () => {
      setViewers((v) => {
        const change = Math.random() > 0.5 ? 1 : -1;
        return Math.max(5, Math.min(18, v + change)); // ‡∏à‡∏≥‡∏Å‡∏±‡∏î 3‚Äì7 ‡∏Ñ‡∏ô
      });

      const nextUpdate = Math.floor(Math.random() * 3000) + 2000; // 2000‚Äì5000ms
      viewerTimer = setTimeout(randomViewerUpdate, nextUpdate);
    };

    const randomComment = () => {
      const chance = Math.random();

      // üí¨ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ 80% ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå
      if (chance < 0.8) {
        const user = fakeUsers[Math.floor(Math.random() * fakeUsers.length)];
        const newComment = {
          id: commentId++,
          name: user.name,
          avatar: user.avatar,
          message:
            fakeComments[Math.floor(Math.random() * fakeComments.length)],
        };

        setComments((prev) => {
          const newComments = [...prev, newComment];
          return newComments.slice(-8);
        });
      }

      // ‚è±Ô∏è ‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå: 6‚Äì12 ‡∏ß‡∏¥
      const nextComment = Math.floor(Math.random() * 6000) + 6000;
      commentTimer = setTimeout(randomComment, nextComment);
    };

    // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏¢‡∏≠‡∏î‡∏ú‡∏π‡πâ‡∏ä‡∏°‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏° 3‚Äì7
    setViewers(Math.floor(Math.random() * 5) + 3);

    randomViewerUpdate(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏∏‡πà‡∏°‡∏¢‡∏≠‡∏î‡∏Ñ‡∏ô‡∏î‡∏π
    randomComment(); // ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏∏‡πà‡∏°‡∏Ñ‡∏≠‡∏°‡πÄ‡∏°‡∏ô‡∏ï‡πå
    startCamera();

    return () => {
      clearTimeout(viewerTimer);
      clearTimeout(commentTimer);
    };
  }, []);

  const commentsRef = useRef<HTMLDivElement>(null);
  useEffect(() => {
    if (commentsRef.current) {
      commentsRef.current.scrollTop = commentsRef.current.scrollHeight;
    }
  }, [comments]);

  return (
    <div className="relative w-full max-w-[430px] mx-auto h-screen overflow-hidden bg-black shadow-lg">
      <div className="k text-white top-0 relative left-0 bottom-0 flex gap-1 m-2 z-100">
        <div className="k bg-[#dc2332] !text-[14px] rounded-[4px] px-1.5">
          ‡∏™‡∏î
        </div>
        <div className="k flex items-center gap-1 bg-[#100f10] rounded-[4px] px-1.5">
          <div className="k !text-[12px]">
            <Eye color="#fff" size={14} />
          </div>
          <div className="k !text-[14px]">{viewers}</div>
        </div>
        <div className="k flex items-center gap-1 rounded-[4px] px-1">
          <div className="k !text-[12px]">
            <Globe color="#dbd7d6" size={14} />
          </div>
          <div className="k !text-[14px] text-[#dbd7d6]">‡∏™‡∏≤‡∏ò‡∏≤‡∏£‡∏ì‡∏∞</div>
        </div>
      </div>

      <video
        ref={videoRef}
        autoPlay
        muted
        playsInline
        className="w-full h-screen absolute top-0 object-cover transform -scale-x-100"
      />

      <div className="k absolute bottom-0 left-0 right-0">
        <div
          ref={commentsRef}
          className="k space-y-1 max-h-[300px] overflow-y-auto px-3 pb-2"
        >
          {comments.map((comment) => (
            <div key={comment.id} className="k flex gap-2 animate-fade-in">
              <div className="k bg-[#7e7e7e] overflow-hidden min-w-[34px] w-[34px] min-h-[34px] max-h-[34px] rounded-[50%]">
                <img
                  src={comment.avatar}
                  alt={comment.name}
                  className="w-full h-full object-cover"
                />
              </div>
              <div className="k bg-[#4d4f44]/50 rounded-[18px] px-2.5 py-1 text-white flex flex-col gap-0">
                <div className="k font-bold !text-[12px]">{comment.name}</div>
                <div className="k !text-[12px]">{comment.message}</div>
              </div>
            </div>
          ))}
        </div>
        <div className="k flex items-center justify-between bg-[#161616] text-white px-3 py-3.5">
          <div className="k flex items-center gap-6">
            <div className="k">
              <Mic color="#fafafa" size={24} />
            </div>
            <div className="k">
              <MicVocal color="#fafafa" size={24} />
            </div>
            <div className="k">
              <SwitchCamera color="#fafafa" size={24} />
            </div>
            <div className="k">
              <Link color="#fafafa" size={24} />
            </div>
            <div className="k">
              <UserRoundPlus color="#fafafa" size={24} />
            </div>
            <div className="k">
              <Users color="#fafafa" size={24} />
            </div>
            <div className="k">
              <MessageCircle color="#fafafa" size={24} />
            </div>
          </div>
          <div className="k border-1 rounded-[3px] px-2 py-0.5 !text-[11px] font-bold">
            ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
          </div>
        </div>
      </div>

      <style jsx>{`
        @keyframes fade-in {
          from {
            opacity: 0;
            transform: translateY(10px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }

        .animate-fade-in {
          animation: fade-in 0.3s ease-out;
        }
      `}</style>
    </div>
  );
}
